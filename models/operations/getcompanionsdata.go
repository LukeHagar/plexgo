// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

var GetCompanionsDataServerList = []string{
	"https://plex.tv/api/v2",
}

type ResponseBody struct {
	Identifier string `json:"identifier"`
	BaseURL    string `json:"baseURL"`
	Title      string `json:"title"`
	LinkURL    string `json:"linkURL"`
	Provides   string `json:"provides"`
	// The plex authtoken used to identify with
	Token string `json:"token"`
}

func (r *ResponseBody) GetIdentifier() string {
	if r == nil {
		return ""
	}
	return r.Identifier
}

func (r *ResponseBody) GetBaseURL() string {
	if r == nil {
		return ""
	}
	return r.BaseURL
}

func (r *ResponseBody) GetTitle() string {
	if r == nil {
		return ""
	}
	return r.Title
}

func (r *ResponseBody) GetLinkURL() string {
	if r == nil {
		return ""
	}
	return r.LinkURL
}

func (r *ResponseBody) GetProvides() string {
	if r == nil {
		return ""
	}
	return r.Provides
}

func (r *ResponseBody) GetToken() string {
	if r == nil {
		return ""
	}
	return r.Token
}

type GetCompanionsDataResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Companions Data
	ResponseBodies []ResponseBody
}

func (g *GetCompanionsDataResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetCompanionsDataResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetCompanionsDataResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetCompanionsDataResponse) GetResponseBodies() []ResponseBody {
	if g == nil {
		return nil
	}
	return g.ResponseBodies
}
