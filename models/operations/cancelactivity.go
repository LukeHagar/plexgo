// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/LukeHagar/plexgo/internal/utils"
	"github.com/LukeHagar/plexgo/models/components"
	"net/http"
)

type CancelActivityGlobals struct {
	// Indicates the client accepts the indicated media types
	Accepts *components.Accepts `default:"application/xml" header:"style=simple,explode=false,name=accepts"`
	// An opaque identifier unique to the client
	ClientIdentifier *string `header:"style=simple,explode=false,name=X-Plex-Client-Identifier"`
	// The name of the client product
	Product *string `header:"style=simple,explode=false,name=X-Plex-Product"`
	// The version of the client application
	Version *string `header:"style=simple,explode=false,name=X-Plex-Version"`
	// The platform of the client
	Platform *string `header:"style=simple,explode=false,name=X-Plex-Platform"`
	// The version of the platform
	PlatformVersion *string `header:"style=simple,explode=false,name=X-Plex-Platform-Version"`
	// A relatively friendly name for the client device
	Device *string `header:"style=simple,explode=false,name=X-Plex-Device"`
	// A potentially less friendly identifier for the device model
	Model *string `header:"style=simple,explode=false,name=X-Plex-Model"`
	// The device vendor
	DeviceVendor *string `header:"style=simple,explode=false,name=X-Plex-Device-Vendor"`
	// A friendly name for the client
	DeviceName *string `header:"style=simple,explode=false,name=X-Plex-Device-Name"`
	// The marketplace on which the client application is distributed
	Marketplace *string `header:"style=simple,explode=false,name=X-Plex-Marketplace"`
}

func (c CancelActivityGlobals) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CancelActivityGlobals) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (c *CancelActivityGlobals) GetAccepts() *components.Accepts {
	if c == nil {
		return nil
	}
	return c.Accepts
}

func (c *CancelActivityGlobals) GetClientIdentifier() *string {
	if c == nil {
		return nil
	}
	return c.ClientIdentifier
}

func (c *CancelActivityGlobals) GetProduct() *string {
	if c == nil {
		return nil
	}
	return c.Product
}

func (c *CancelActivityGlobals) GetVersion() *string {
	if c == nil {
		return nil
	}
	return c.Version
}

func (c *CancelActivityGlobals) GetPlatform() *string {
	if c == nil {
		return nil
	}
	return c.Platform
}

func (c *CancelActivityGlobals) GetPlatformVersion() *string {
	if c == nil {
		return nil
	}
	return c.PlatformVersion
}

func (c *CancelActivityGlobals) GetDevice() *string {
	if c == nil {
		return nil
	}
	return c.Device
}

func (c *CancelActivityGlobals) GetModel() *string {
	if c == nil {
		return nil
	}
	return c.Model
}

func (c *CancelActivityGlobals) GetDeviceVendor() *string {
	if c == nil {
		return nil
	}
	return c.DeviceVendor
}

func (c *CancelActivityGlobals) GetDeviceName() *string {
	if c == nil {
		return nil
	}
	return c.DeviceName
}

func (c *CancelActivityGlobals) GetMarketplace() *string {
	if c == nil {
		return nil
	}
	return c.Marketplace
}

type CancelActivityRequest struct {
	// Indicates the client accepts the indicated media types
	Accepts *components.Accepts `default:"application/xml" header:"style=simple,explode=false,name=accepts"`
	// An opaque identifier unique to the client
	ClientIdentifier *string `header:"style=simple,explode=false,name=X-Plex-Client-Identifier"`
	// The name of the client product
	Product *string `header:"style=simple,explode=false,name=X-Plex-Product"`
	// The version of the client application
	Version *string `header:"style=simple,explode=false,name=X-Plex-Version"`
	// The platform of the client
	Platform *string `header:"style=simple,explode=false,name=X-Plex-Platform"`
	// The version of the platform
	PlatformVersion *string `header:"style=simple,explode=false,name=X-Plex-Platform-Version"`
	// A relatively friendly name for the client device
	Device *string `header:"style=simple,explode=false,name=X-Plex-Device"`
	// A potentially less friendly identifier for the device model
	Model *string `header:"style=simple,explode=false,name=X-Plex-Model"`
	// The device vendor
	DeviceVendor *string `header:"style=simple,explode=false,name=X-Plex-Device-Vendor"`
	// A friendly name for the client
	DeviceName *string `header:"style=simple,explode=false,name=X-Plex-Device-Name"`
	// The marketplace on which the client application is distributed
	Marketplace *string `header:"style=simple,explode=false,name=X-Plex-Marketplace"`
	// The UUID of the activity to cancel.
	ActivityID string `pathParam:"style=simple,explode=false,name=activityId"`
}

func (c CancelActivityRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CancelActivityRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"activityId"}); err != nil {
		return err
	}
	return nil
}

func (c *CancelActivityRequest) GetAccepts() *components.Accepts {
	if c == nil {
		return nil
	}
	return c.Accepts
}

func (c *CancelActivityRequest) GetClientIdentifier() *string {
	if c == nil {
		return nil
	}
	return c.ClientIdentifier
}

func (c *CancelActivityRequest) GetProduct() *string {
	if c == nil {
		return nil
	}
	return c.Product
}

func (c *CancelActivityRequest) GetVersion() *string {
	if c == nil {
		return nil
	}
	return c.Version
}

func (c *CancelActivityRequest) GetPlatform() *string {
	if c == nil {
		return nil
	}
	return c.Platform
}

func (c *CancelActivityRequest) GetPlatformVersion() *string {
	if c == nil {
		return nil
	}
	return c.PlatformVersion
}

func (c *CancelActivityRequest) GetDevice() *string {
	if c == nil {
		return nil
	}
	return c.Device
}

func (c *CancelActivityRequest) GetModel() *string {
	if c == nil {
		return nil
	}
	return c.Model
}

func (c *CancelActivityRequest) GetDeviceVendor() *string {
	if c == nil {
		return nil
	}
	return c.DeviceVendor
}

func (c *CancelActivityRequest) GetDeviceName() *string {
	if c == nil {
		return nil
	}
	return c.DeviceName
}

func (c *CancelActivityRequest) GetMarketplace() *string {
	if c == nil {
		return nil
	}
	return c.Marketplace
}

func (c *CancelActivityRequest) GetActivityID() string {
	if c == nil {
		return ""
	}
	return c.ActivityID
}

type CancelActivityResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (c *CancelActivityResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CancelActivityResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CancelActivityResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}
