// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetMediaPostersRequest struct {
	// the id of the library item to return the posters of.
	RatingKey int64 `pathParam:"style=simple,explode=false,name=ratingKey"`
}

func (g *GetMediaPostersRequest) GetRatingKey() int64 {
	if g == nil {
		return 0
	}
	return g.RatingKey
}

type GetMediaPostersMetadata struct {
	// The URL of the poster.
	Key string `json:"key"`
	// The provider of the poster.
	Provider *string `json:"provider,omitempty"`
	// The URL of the poster.
	RatingKey string `json:"ratingKey"`
	// Whether this is the selected poster.
	Selected bool `json:"selected"`
	// The URL of the poster thumbnail.
	Thumb string `json:"thumb"`
}

func (g *GetMediaPostersMetadata) GetKey() string {
	if g == nil {
		return ""
	}
	return g.Key
}

func (g *GetMediaPostersMetadata) GetProvider() *string {
	if g == nil {
		return nil
	}
	return g.Provider
}

func (g *GetMediaPostersMetadata) GetRatingKey() string {
	if g == nil {
		return ""
	}
	return g.RatingKey
}

func (g *GetMediaPostersMetadata) GetSelected() bool {
	if g == nil {
		return false
	}
	return g.Selected
}

func (g *GetMediaPostersMetadata) GetThumb() string {
	if g == nil {
		return ""
	}
	return g.Thumb
}

type GetMediaPostersMediaContainer struct {
	// Number of media items returned in this response.
	Size int `json:"size"`
	// The version number for media tags.
	MediaTagVersion int64 `json:"mediaTagVersion"`
	// The prefix used for media tag resource paths.
	MediaTagPrefix string `json:"mediaTagPrefix"`
	// An plugin identifier for the media container.
	Identifier string                    `json:"identifier"`
	Metadata   []GetMediaPostersMetadata `json:"Metadata"`
}

func (g *GetMediaPostersMediaContainer) GetSize() int {
	if g == nil {
		return 0
	}
	return g.Size
}

func (g *GetMediaPostersMediaContainer) GetMediaTagVersion() int64 {
	if g == nil {
		return 0
	}
	return g.MediaTagVersion
}

func (g *GetMediaPostersMediaContainer) GetMediaTagPrefix() string {
	if g == nil {
		return ""
	}
	return g.MediaTagPrefix
}

func (g *GetMediaPostersMediaContainer) GetIdentifier() string {
	if g == nil {
		return ""
	}
	return g.Identifier
}

func (g *GetMediaPostersMediaContainer) GetMetadata() []GetMediaPostersMetadata {
	if g == nil {
		return []GetMediaPostersMetadata{}
	}
	return g.Metadata
}

// GetMediaPostersResponseBody - The available posters for the library item.
type GetMediaPostersResponseBody struct {
	MediaContainer *GetMediaPostersMediaContainer `json:"MediaContainer,omitempty"`
}

func (g *GetMediaPostersResponseBody) GetMediaContainer() *GetMediaPostersMediaContainer {
	if g == nil {
		return nil
	}
	return g.MediaContainer
}

type GetMediaPostersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The available posters for the library item.
	Object *GetMediaPostersResponseBody
}

func (g *GetMediaPostersResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetMediaPostersResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetMediaPostersResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetMediaPostersResponse) GetObject() *GetMediaPostersResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
