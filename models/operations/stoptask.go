// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

// PathParamTaskName - The name of the task to be started.
type PathParamTaskName string

const (
	PathParamTaskNameBackupDatabase            PathParamTaskName = "BackupDatabase"
	PathParamTaskNameBuildGracenoteCollections PathParamTaskName = "BuildGracenoteCollections"
	PathParamTaskNameCheckForUpdates           PathParamTaskName = "CheckForUpdates"
	PathParamTaskNameCleanOldBundles           PathParamTaskName = "CleanOldBundles"
	PathParamTaskNameCleanOldCacheFiles        PathParamTaskName = "CleanOldCacheFiles"
	PathParamTaskNameDeepMediaAnalysis         PathParamTaskName = "DeepMediaAnalysis"
	PathParamTaskNameGenerateAutoTags          PathParamTaskName = "GenerateAutoTags"
	PathParamTaskNameGenerateChapterThumbs     PathParamTaskName = "GenerateChapterThumbs"
	PathParamTaskNameGenerateMediaIndexFiles   PathParamTaskName = "GenerateMediaIndexFiles"
	PathParamTaskNameOptimizeDatabase          PathParamTaskName = "OptimizeDatabase"
	PathParamTaskNameRefreshLibraries          PathParamTaskName = "RefreshLibraries"
	PathParamTaskNameRefreshLocalMedia         PathParamTaskName = "RefreshLocalMedia"
	PathParamTaskNameRefreshPeriodicMetadata   PathParamTaskName = "RefreshPeriodicMetadata"
	PathParamTaskNameUpgradeMediaAnalysis      PathParamTaskName = "UpgradeMediaAnalysis"
)

func (e PathParamTaskName) ToPointer() *PathParamTaskName {
	return &e
}

type StopTaskRequest struct {
	// The name of the task to be started.
	TaskName PathParamTaskName `pathParam:"style=simple,explode=false,name=taskName"`
}

func (s *StopTaskRequest) GetTaskName() PathParamTaskName {
	if s == nil {
		return PathParamTaskName("")
	}
	return s.TaskName
}

type StopTaskResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (s *StopTaskResponse) GetContentType() string {
	if s == nil {
		return ""
	}
	return s.ContentType
}

func (s *StopTaskResponse) GetStatusCode() int {
	if s == nil {
		return 0
	}
	return s.StatusCode
}

func (s *StopTaskResponse) GetRawResponse() *http.Response {
	if s == nil {
		return nil
	}
	return s.RawResponse
}
