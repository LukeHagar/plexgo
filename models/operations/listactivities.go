// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Activity struct {
	// Indicates whether this activity can be cancelled
	Cancellable *bool `json:"cancellable,omitempty"`
	// An object with additional values
	Context map[string]any `json:"Context,omitempty"`
	// A progress percentage.  A value of -1 means the progress is indeterminate
	Progress *float64 `json:"progress,omitempty"`
	// An object with the response to the async opperation
	Response map[string]any `json:"Response,omitempty"`
	// A user-friendly sub-title for this activity
	Subtitle *string `json:"subtitle,omitempty"`
	// A user-friendly title for this activity
	Title *string `json:"title,omitempty"`
	// The type of activity
	Type *string `json:"type,omitempty"`
	// The user this activity belongs to
	UserID *int64 `json:"userID,omitempty"`
	// The ID of the activity
	UUID *string `json:"uuid,omitempty"`
}

func (a *Activity) GetCancellable() *bool {
	if a == nil {
		return nil
	}
	return a.Cancellable
}

func (a *Activity) GetContext() map[string]any {
	if a == nil {
		return nil
	}
	return a.Context
}

func (a *Activity) GetProgress() *float64 {
	if a == nil {
		return nil
	}
	return a.Progress
}

func (a *Activity) GetResponse() map[string]any {
	if a == nil {
		return nil
	}
	return a.Response
}

func (a *Activity) GetSubtitle() *string {
	if a == nil {
		return nil
	}
	return a.Subtitle
}

func (a *Activity) GetTitle() *string {
	if a == nil {
		return nil
	}
	return a.Title
}

func (a *Activity) GetType() *string {
	if a == nil {
		return nil
	}
	return a.Type
}

func (a *Activity) GetUserID() *int64 {
	if a == nil {
		return nil
	}
	return a.UserID
}

func (a *Activity) GetUUID() *string {
	if a == nil {
		return nil
	}
	return a.UUID
}

type ListActivitiesMediaContainer struct {
	Activity []Activity `json:"Activity,omitempty"`
}

func (l *ListActivitiesMediaContainer) GetActivity() []Activity {
	if l == nil {
		return nil
	}
	return l.Activity
}

// ListActivitiesResponseBody - OK
type ListActivitiesResponseBody struct {
	MediaContainer *ListActivitiesMediaContainer `json:"MediaContainer,omitempty"`
}

func (l *ListActivitiesResponseBody) GetMediaContainer() *ListActivitiesMediaContainer {
	if l == nil {
		return nil
	}
	return l.MediaContainer
}

type ListActivitiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Object *ListActivitiesResponseBody
}

func (l *ListActivitiesResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListActivitiesResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListActivitiesResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}

func (l *ListActivitiesResponse) GetObject() *ListActivitiesResponseBody {
	if l == nil {
		return nil
	}
	return l.Object
}
