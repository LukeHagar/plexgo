// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetBandwidthStatisticsRequest struct {
	// The timespan to retrieve statistics for
	// the exact meaning of this parameter is not known
	//
	Timespan *int64 `queryParam:"style=form,explode=true,name=timespan"`
}

func (g *GetBandwidthStatisticsRequest) GetTimespan() *int64 {
	if g == nil {
		return nil
	}
	return g.Timespan
}

type GetBandwidthStatisticsDevice struct {
	ID               *int    `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	Platform         *string `json:"platform,omitempty"`
	ClientIdentifier *string `json:"clientIdentifier,omitempty"`
	CreatedAt        *int    `json:"createdAt,omitempty"`
}

func (g *GetBandwidthStatisticsDevice) GetID() *int {
	if g == nil {
		return nil
	}
	return g.ID
}

func (g *GetBandwidthStatisticsDevice) GetName() *string {
	if g == nil {
		return nil
	}
	return g.Name
}

func (g *GetBandwidthStatisticsDevice) GetPlatform() *string {
	if g == nil {
		return nil
	}
	return g.Platform
}

func (g *GetBandwidthStatisticsDevice) GetClientIdentifier() *string {
	if g == nil {
		return nil
	}
	return g.ClientIdentifier
}

func (g *GetBandwidthStatisticsDevice) GetCreatedAt() *int {
	if g == nil {
		return nil
	}
	return g.CreatedAt
}

type GetBandwidthStatisticsAccount struct {
	ID                      *int    `json:"id,omitempty"`
	Key                     *string `json:"key,omitempty"`
	Name                    *string `json:"name,omitempty"`
	DefaultAudioLanguage    *string `json:"defaultAudioLanguage,omitempty"`
	AutoSelectAudio         *bool   `json:"autoSelectAudio,omitempty"`
	DefaultSubtitleLanguage *string `json:"defaultSubtitleLanguage,omitempty"`
	SubtitleMode            *int    `json:"subtitleMode,omitempty"`
	Thumb                   *string `json:"thumb,omitempty"`
}

func (g *GetBandwidthStatisticsAccount) GetID() *int {
	if g == nil {
		return nil
	}
	return g.ID
}

func (g *GetBandwidthStatisticsAccount) GetKey() *string {
	if g == nil {
		return nil
	}
	return g.Key
}

func (g *GetBandwidthStatisticsAccount) GetName() *string {
	if g == nil {
		return nil
	}
	return g.Name
}

func (g *GetBandwidthStatisticsAccount) GetDefaultAudioLanguage() *string {
	if g == nil {
		return nil
	}
	return g.DefaultAudioLanguage
}

func (g *GetBandwidthStatisticsAccount) GetAutoSelectAudio() *bool {
	if g == nil {
		return nil
	}
	return g.AutoSelectAudio
}

func (g *GetBandwidthStatisticsAccount) GetDefaultSubtitleLanguage() *string {
	if g == nil {
		return nil
	}
	return g.DefaultSubtitleLanguage
}

func (g *GetBandwidthStatisticsAccount) GetSubtitleMode() *int {
	if g == nil {
		return nil
	}
	return g.SubtitleMode
}

func (g *GetBandwidthStatisticsAccount) GetThumb() *string {
	if g == nil {
		return nil
	}
	return g.Thumb
}

type StatisticsBandwidth struct {
	AccountID *int   `json:"accountID,omitempty"`
	DeviceID  *int   `json:"deviceID,omitempty"`
	Timespan  *int64 `json:"timespan,omitempty"`
	At        *int   `json:"at,omitempty"`
	Lan       *bool  `json:"lan,omitempty"`
	Bytes     *int64 `json:"bytes,omitempty"`
}

func (s *StatisticsBandwidth) GetAccountID() *int {
	if s == nil {
		return nil
	}
	return s.AccountID
}

func (s *StatisticsBandwidth) GetDeviceID() *int {
	if s == nil {
		return nil
	}
	return s.DeviceID
}

func (s *StatisticsBandwidth) GetTimespan() *int64 {
	if s == nil {
		return nil
	}
	return s.Timespan
}

func (s *StatisticsBandwidth) GetAt() *int {
	if s == nil {
		return nil
	}
	return s.At
}

func (s *StatisticsBandwidth) GetLan() *bool {
	if s == nil {
		return nil
	}
	return s.Lan
}

func (s *StatisticsBandwidth) GetBytes() *int64 {
	if s == nil {
		return nil
	}
	return s.Bytes
}

type GetBandwidthStatisticsMediaContainer struct {
	Size                *int                            `json:"size,omitempty"`
	Device              []GetBandwidthStatisticsDevice  `json:"Device,omitempty"`
	Account             []GetBandwidthStatisticsAccount `json:"Account,omitempty"`
	StatisticsBandwidth []StatisticsBandwidth           `json:"StatisticsBandwidth,omitempty"`
}

func (g *GetBandwidthStatisticsMediaContainer) GetSize() *int {
	if g == nil {
		return nil
	}
	return g.Size
}

func (g *GetBandwidthStatisticsMediaContainer) GetDevice() []GetBandwidthStatisticsDevice {
	if g == nil {
		return nil
	}
	return g.Device
}

func (g *GetBandwidthStatisticsMediaContainer) GetAccount() []GetBandwidthStatisticsAccount {
	if g == nil {
		return nil
	}
	return g.Account
}

func (g *GetBandwidthStatisticsMediaContainer) GetStatisticsBandwidth() []StatisticsBandwidth {
	if g == nil {
		return nil
	}
	return g.StatisticsBandwidth
}

// GetBandwidthStatisticsResponseBody - Bandwidth Statistics
type GetBandwidthStatisticsResponseBody struct {
	MediaContainer *GetBandwidthStatisticsMediaContainer `json:"MediaContainer,omitempty"`
}

func (g *GetBandwidthStatisticsResponseBody) GetMediaContainer() *GetBandwidthStatisticsMediaContainer {
	if g == nil {
		return nil
	}
	return g.MediaContainer
}

type GetBandwidthStatisticsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Bandwidth Statistics
	Object *GetBandwidthStatisticsResponseBody
}

func (g *GetBandwidthStatisticsResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetBandwidthStatisticsResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetBandwidthStatisticsResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetBandwidthStatisticsResponse) GetObject() *GetBandwidthStatisticsResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
