// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Server struct {
	Name                 *string  `json:"name,omitempty"`
	Host                 *string  `json:"host,omitempty"`
	Address              *string  `json:"address,omitempty"`
	Port                 *float64 `json:"port,omitempty"`
	MachineIdentifier    *string  `json:"machineIdentifier,omitempty"`
	Version              *string  `json:"version,omitempty"`
	Protocol             *string  `json:"protocol,omitempty"`
	Product              *string  `json:"product,omitempty"`
	DeviceClass          *string  `json:"deviceClass,omitempty"`
	ProtocolVersion      *float64 `json:"protocolVersion,omitempty"`
	ProtocolCapabilities *string  `json:"protocolCapabilities,omitempty"`
}

func (s *Server) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *Server) GetHost() *string {
	if s == nil {
		return nil
	}
	return s.Host
}

func (s *Server) GetAddress() *string {
	if s == nil {
		return nil
	}
	return s.Address
}

func (s *Server) GetPort() *float64 {
	if s == nil {
		return nil
	}
	return s.Port
}

func (s *Server) GetMachineIdentifier() *string {
	if s == nil {
		return nil
	}
	return s.MachineIdentifier
}

func (s *Server) GetVersion() *string {
	if s == nil {
		return nil
	}
	return s.Version
}

func (s *Server) GetProtocol() *string {
	if s == nil {
		return nil
	}
	return s.Protocol
}

func (s *Server) GetProduct() *string {
	if s == nil {
		return nil
	}
	return s.Product
}

func (s *Server) GetDeviceClass() *string {
	if s == nil {
		return nil
	}
	return s.DeviceClass
}

func (s *Server) GetProtocolVersion() *float64 {
	if s == nil {
		return nil
	}
	return s.ProtocolVersion
}

func (s *Server) GetProtocolCapabilities() *string {
	if s == nil {
		return nil
	}
	return s.ProtocolCapabilities
}

type GetAvailableClientsMediaContainer struct {
	Size   *float64 `json:"size,omitempty"`
	Server []Server `json:"Server,omitempty"`
}

func (g *GetAvailableClientsMediaContainer) GetSize() *float64 {
	if g == nil {
		return nil
	}
	return g.Size
}

func (g *GetAvailableClientsMediaContainer) GetServer() []Server {
	if g == nil {
		return nil
	}
	return g.Server
}

// GetAvailableClientsResponseBody - Available Clients
type GetAvailableClientsResponseBody struct {
	MediaContainer *GetAvailableClientsMediaContainer `json:"MediaContainer,omitempty"`
}

func (g *GetAvailableClientsResponseBody) GetMediaContainer() *GetAvailableClientsMediaContainer {
	if g == nil {
		return nil
	}
	return g.MediaContainer
}

type GetAvailableClientsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Available Clients
	Object *GetAvailableClientsResponseBody
}

func (g *GetAvailableClientsResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetAvailableClientsResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetAvailableClientsResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetAvailableClientsResponse) GetObject() *GetAvailableClientsResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
