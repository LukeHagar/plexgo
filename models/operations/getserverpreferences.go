// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Setting struct {
	ID         *string `json:"id,omitempty"`
	Label      *string `json:"label,omitempty"`
	Summary    *string `json:"summary,omitempty"`
	Type       *string `json:"type,omitempty"`
	Default    *bool   `json:"default,omitempty"`
	Value      *bool   `json:"value,omitempty"`
	Hidden     *bool   `json:"hidden,omitempty"`
	Advanced   *bool   `json:"advanced,omitempty"`
	Group      *string `json:"group,omitempty"`
	EnumValues *string `json:"enumValues,omitempty"`
}

func (s *Setting) GetID() *string {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *Setting) GetLabel() *string {
	if s == nil {
		return nil
	}
	return s.Label
}

func (s *Setting) GetSummary() *string {
	if s == nil {
		return nil
	}
	return s.Summary
}

func (s *Setting) GetType() *string {
	if s == nil {
		return nil
	}
	return s.Type
}

func (s *Setting) GetDefault() *bool {
	if s == nil {
		return nil
	}
	return s.Default
}

func (s *Setting) GetValue() *bool {
	if s == nil {
		return nil
	}
	return s.Value
}

func (s *Setting) GetHidden() *bool {
	if s == nil {
		return nil
	}
	return s.Hidden
}

func (s *Setting) GetAdvanced() *bool {
	if s == nil {
		return nil
	}
	return s.Advanced
}

func (s *Setting) GetGroup() *string {
	if s == nil {
		return nil
	}
	return s.Group
}

func (s *Setting) GetEnumValues() *string {
	if s == nil {
		return nil
	}
	return s.EnumValues
}

type GetServerPreferencesMediaContainer struct {
	Size    *int      `json:"size,omitempty"`
	Setting []Setting `json:"Setting,omitempty"`
}

func (g *GetServerPreferencesMediaContainer) GetSize() *int {
	if g == nil {
		return nil
	}
	return g.Size
}

func (g *GetServerPreferencesMediaContainer) GetSetting() []Setting {
	if g == nil {
		return nil
	}
	return g.Setting
}

// GetServerPreferencesResponseBody - Server Preferences
type GetServerPreferencesResponseBody struct {
	MediaContainer *GetServerPreferencesMediaContainer `json:"MediaContainer,omitempty"`
}

func (g *GetServerPreferencesResponseBody) GetMediaContainer() *GetServerPreferencesMediaContainer {
	if g == nil {
		return nil
	}
	return g.MediaContainer
}

type GetServerPreferencesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Server Preferences
	Object *GetServerPreferencesResponseBody
}

func (g *GetServerPreferencesResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetServerPreferencesResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetServerPreferencesResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetServerPreferencesResponse) GetObject() *GetServerPreferencesResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
