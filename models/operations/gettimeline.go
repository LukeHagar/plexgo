// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

// State - The state of the media item
type State string

const (
	StatePlaying State = "playing"
	StatePaused  State = "paused"
	StateStopped State = "stopped"
)

func (e State) ToPointer() *State {
	return &e
}

type GetTimelineRequest struct {
	// The rating key of the media item
	RatingKey float64 `queryParam:"style=form,explode=true,name=ratingKey"`
	// The key of the media item to get the timeline for
	Key string `queryParam:"style=form,explode=true,name=key"`
	// The state of the media item
	State State `queryParam:"style=form,explode=true,name=state"`
	// Whether the media item has MDE
	HasMDE float64 `queryParam:"style=form,explode=true,name=hasMDE"`
	// The time of the media item
	Time float64 `queryParam:"style=form,explode=true,name=time"`
	// The duration of the media item
	Duration float64 `queryParam:"style=form,explode=true,name=duration"`
	// The context of the media item
	Context string `queryParam:"style=form,explode=true,name=context"`
	// The play queue item ID of the media item
	PlayQueueItemID float64 `queryParam:"style=form,explode=true,name=playQueueItemID"`
	// The playback time of the media item
	PlayBackTime float64 `queryParam:"style=form,explode=true,name=playBackTime"`
	// The row of the media item
	Row float64 `queryParam:"style=form,explode=true,name=row"`
}

func (g *GetTimelineRequest) GetRatingKey() float64 {
	if g == nil {
		return 0.0
	}
	return g.RatingKey
}

func (g *GetTimelineRequest) GetKey() string {
	if g == nil {
		return ""
	}
	return g.Key
}

func (g *GetTimelineRequest) GetState() State {
	if g == nil {
		return State("")
	}
	return g.State
}

func (g *GetTimelineRequest) GetHasMDE() float64 {
	if g == nil {
		return 0.0
	}
	return g.HasMDE
}

func (g *GetTimelineRequest) GetTime() float64 {
	if g == nil {
		return 0.0
	}
	return g.Time
}

func (g *GetTimelineRequest) GetDuration() float64 {
	if g == nil {
		return 0.0
	}
	return g.Duration
}

func (g *GetTimelineRequest) GetContext() string {
	if g == nil {
		return ""
	}
	return g.Context
}

func (g *GetTimelineRequest) GetPlayQueueItemID() float64 {
	if g == nil {
		return 0.0
	}
	return g.PlayQueueItemID
}

func (g *GetTimelineRequest) GetPlayBackTime() float64 {
	if g == nil {
		return 0.0
	}
	return g.PlayBackTime
}

func (g *GetTimelineRequest) GetRow() float64 {
	if g == nil {
		return 0.0
	}
	return g.Row
}

type GetTimelineResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetTimelineResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetTimelineResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetTimelineResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
