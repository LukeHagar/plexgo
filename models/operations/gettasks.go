// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ButlerTask struct {
	// A user-friendly description of the task
	Description *string `json:"description,omitempty"`
	// Whether this task is enabled or not
	Enabled *bool `json:"enabled,omitempty"`
	// The interval (in days) of when this task is run.  A value of 1 is run every day, 7 is every week, etc.
	Interval *int64 `json:"interval,omitempty"`
	// The name of the task
	Name *string `json:"name,omitempty"`
	// Indicates whether the timing of the task is randomized within the butler interval
	ScheduleRandomized *bool `json:"scheduleRandomized,omitempty"`
	// A user-friendly title of the task
	Title *string `json:"title,omitempty"`
}

func (b *ButlerTask) GetDescription() *string {
	if b == nil {
		return nil
	}
	return b.Description
}

func (b *ButlerTask) GetEnabled() *bool {
	if b == nil {
		return nil
	}
	return b.Enabled
}

func (b *ButlerTask) GetInterval() *int64 {
	if b == nil {
		return nil
	}
	return b.Interval
}

func (b *ButlerTask) GetName() *string {
	if b == nil {
		return nil
	}
	return b.Name
}

func (b *ButlerTask) GetScheduleRandomized() *bool {
	if b == nil {
		return nil
	}
	return b.ScheduleRandomized
}

func (b *ButlerTask) GetTitle() *string {
	if b == nil {
		return nil
	}
	return b.Title
}

type ButlerTasks struct {
	ButlerTask []ButlerTask `json:"ButlerTask,omitempty"`
}

func (b *ButlerTasks) GetButlerTask() []ButlerTask {
	if b == nil {
		return nil
	}
	return b.ButlerTask
}

// GetTasksResponseBody - Butler tasks
type GetTasksResponseBody struct {
	ButlerTasks *ButlerTasks `json:"ButlerTasks,omitempty"`
}

func (g *GetTasksResponseBody) GetButlerTasks() *ButlerTasks {
	if g == nil {
		return nil
	}
	return g.ButlerTasks
}

type GetTasksResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Butler tasks
	Object *GetTasksResponseBody
}

func (g *GetTasksResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetTasksResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetTasksResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetTasksResponse) GetObject() *GetTasksResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
