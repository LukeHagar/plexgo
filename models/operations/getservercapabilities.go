// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Directory struct {
	Count *float64 `json:"count,omitempty"`
	Key   *string  `json:"key,omitempty"`
	Title *string  `json:"title,omitempty"`
}

func (d *Directory) GetCount() *float64 {
	if d == nil {
		return nil
	}
	return d.Count
}

func (d *Directory) GetKey() *string {
	if d == nil {
		return nil
	}
	return d.Key
}

func (d *Directory) GetTitle() *string {
	if d == nil {
		return nil
	}
	return d.Title
}

type MediaContainer struct {
	Size                          *float64    `json:"size,omitempty"`
	AllowCameraUpload             *bool       `json:"allowCameraUpload,omitempty"`
	AllowChannelAccess            *bool       `json:"allowChannelAccess,omitempty"`
	AllowMediaDeletion            *bool       `json:"allowMediaDeletion,omitempty"`
	AllowSharing                  *bool       `json:"allowSharing,omitempty"`
	AllowSync                     *bool       `json:"allowSync,omitempty"`
	AllowTuners                   *bool       `json:"allowTuners,omitempty"`
	BackgroundProcessing          *bool       `json:"backgroundProcessing,omitempty"`
	Certificate                   *bool       `json:"certificate,omitempty"`
	CompanionProxy                *bool       `json:"companionProxy,omitempty"`
	CountryCode                   *string     `json:"countryCode,omitempty"`
	Diagnostics                   *string     `json:"diagnostics,omitempty"`
	EventStream                   *bool       `json:"eventStream,omitempty"`
	FriendlyName                  *string     `json:"friendlyName,omitempty"`
	HubSearch                     *bool       `json:"hubSearch,omitempty"`
	ItemClusters                  *bool       `json:"itemClusters,omitempty"`
	Livetv                        *float64    `json:"livetv,omitempty"`
	MachineIdentifier             *string     `json:"machineIdentifier,omitempty"`
	MediaProviders                *bool       `json:"mediaProviders,omitempty"`
	Multiuser                     *bool       `json:"multiuser,omitempty"`
	MusicAnalysis                 *float64    `json:"musicAnalysis,omitempty"`
	MyPlex                        *bool       `json:"myPlex,omitempty"`
	MyPlexMappingState            *string     `json:"myPlexMappingState,omitempty"`
	MyPlexSigninState             *string     `json:"myPlexSigninState,omitempty"`
	MyPlexSubscription            *bool       `json:"myPlexSubscription,omitempty"`
	MyPlexUsername                *string     `json:"myPlexUsername,omitempty"`
	OfflineTranscode              *float64    `json:"offlineTranscode,omitempty"`
	OwnerFeatures                 *string     `json:"ownerFeatures,omitempty"`
	PhotoAutoTag                  *bool       `json:"photoAutoTag,omitempty"`
	Platform                      *string     `json:"platform,omitempty"`
	PlatformVersion               *string     `json:"platformVersion,omitempty"`
	PluginHost                    *bool       `json:"pluginHost,omitempty"`
	PushNotifications             *bool       `json:"pushNotifications,omitempty"`
	ReadOnlyLibraries             *bool       `json:"readOnlyLibraries,omitempty"`
	StreamingBrainABRVersion      *float64    `json:"streamingBrainABRVersion,omitempty"`
	StreamingBrainVersion         *float64    `json:"streamingBrainVersion,omitempty"`
	Sync                          *bool       `json:"sync,omitempty"`
	TranscoderActiveVideoSessions *float64    `json:"transcoderActiveVideoSessions,omitempty"`
	TranscoderAudio               *bool       `json:"transcoderAudio,omitempty"`
	TranscoderLyrics              *bool       `json:"transcoderLyrics,omitempty"`
	TranscoderPhoto               *bool       `json:"transcoderPhoto,omitempty"`
	TranscoderSubtitles           *bool       `json:"transcoderSubtitles,omitempty"`
	TranscoderVideo               *bool       `json:"transcoderVideo,omitempty"`
	TranscoderVideoBitrates       *string     `json:"transcoderVideoBitrates,omitempty"`
	TranscoderVideoQualities      *string     `json:"transcoderVideoQualities,omitempty"`
	TranscoderVideoResolutions    *string     `json:"transcoderVideoResolutions,omitempty"`
	UpdatedAt                     *float64    `json:"updatedAt,omitempty"`
	Updater                       *bool       `json:"updater,omitempty"`
	Version                       *string     `json:"version,omitempty"`
	VoiceSearch                   *bool       `json:"voiceSearch,omitempty"`
	Directory                     []Directory `json:"Directory,omitempty"`
}

func (m *MediaContainer) GetSize() *float64 {
	if m == nil {
		return nil
	}
	return m.Size
}

func (m *MediaContainer) GetAllowCameraUpload() *bool {
	if m == nil {
		return nil
	}
	return m.AllowCameraUpload
}

func (m *MediaContainer) GetAllowChannelAccess() *bool {
	if m == nil {
		return nil
	}
	return m.AllowChannelAccess
}

func (m *MediaContainer) GetAllowMediaDeletion() *bool {
	if m == nil {
		return nil
	}
	return m.AllowMediaDeletion
}

func (m *MediaContainer) GetAllowSharing() *bool {
	if m == nil {
		return nil
	}
	return m.AllowSharing
}

func (m *MediaContainer) GetAllowSync() *bool {
	if m == nil {
		return nil
	}
	return m.AllowSync
}

func (m *MediaContainer) GetAllowTuners() *bool {
	if m == nil {
		return nil
	}
	return m.AllowTuners
}

func (m *MediaContainer) GetBackgroundProcessing() *bool {
	if m == nil {
		return nil
	}
	return m.BackgroundProcessing
}

func (m *MediaContainer) GetCertificate() *bool {
	if m == nil {
		return nil
	}
	return m.Certificate
}

func (m *MediaContainer) GetCompanionProxy() *bool {
	if m == nil {
		return nil
	}
	return m.CompanionProxy
}

func (m *MediaContainer) GetCountryCode() *string {
	if m == nil {
		return nil
	}
	return m.CountryCode
}

func (m *MediaContainer) GetDiagnostics() *string {
	if m == nil {
		return nil
	}
	return m.Diagnostics
}

func (m *MediaContainer) GetEventStream() *bool {
	if m == nil {
		return nil
	}
	return m.EventStream
}

func (m *MediaContainer) GetFriendlyName() *string {
	if m == nil {
		return nil
	}
	return m.FriendlyName
}

func (m *MediaContainer) GetHubSearch() *bool {
	if m == nil {
		return nil
	}
	return m.HubSearch
}

func (m *MediaContainer) GetItemClusters() *bool {
	if m == nil {
		return nil
	}
	return m.ItemClusters
}

func (m *MediaContainer) GetLivetv() *float64 {
	if m == nil {
		return nil
	}
	return m.Livetv
}

func (m *MediaContainer) GetMachineIdentifier() *string {
	if m == nil {
		return nil
	}
	return m.MachineIdentifier
}

func (m *MediaContainer) GetMediaProviders() *bool {
	if m == nil {
		return nil
	}
	return m.MediaProviders
}

func (m *MediaContainer) GetMultiuser() *bool {
	if m == nil {
		return nil
	}
	return m.Multiuser
}

func (m *MediaContainer) GetMusicAnalysis() *float64 {
	if m == nil {
		return nil
	}
	return m.MusicAnalysis
}

func (m *MediaContainer) GetMyPlex() *bool {
	if m == nil {
		return nil
	}
	return m.MyPlex
}

func (m *MediaContainer) GetMyPlexMappingState() *string {
	if m == nil {
		return nil
	}
	return m.MyPlexMappingState
}

func (m *MediaContainer) GetMyPlexSigninState() *string {
	if m == nil {
		return nil
	}
	return m.MyPlexSigninState
}

func (m *MediaContainer) GetMyPlexSubscription() *bool {
	if m == nil {
		return nil
	}
	return m.MyPlexSubscription
}

func (m *MediaContainer) GetMyPlexUsername() *string {
	if m == nil {
		return nil
	}
	return m.MyPlexUsername
}

func (m *MediaContainer) GetOfflineTranscode() *float64 {
	if m == nil {
		return nil
	}
	return m.OfflineTranscode
}

func (m *MediaContainer) GetOwnerFeatures() *string {
	if m == nil {
		return nil
	}
	return m.OwnerFeatures
}

func (m *MediaContainer) GetPhotoAutoTag() *bool {
	if m == nil {
		return nil
	}
	return m.PhotoAutoTag
}

func (m *MediaContainer) GetPlatform() *string {
	if m == nil {
		return nil
	}
	return m.Platform
}

func (m *MediaContainer) GetPlatformVersion() *string {
	if m == nil {
		return nil
	}
	return m.PlatformVersion
}

func (m *MediaContainer) GetPluginHost() *bool {
	if m == nil {
		return nil
	}
	return m.PluginHost
}

func (m *MediaContainer) GetPushNotifications() *bool {
	if m == nil {
		return nil
	}
	return m.PushNotifications
}

func (m *MediaContainer) GetReadOnlyLibraries() *bool {
	if m == nil {
		return nil
	}
	return m.ReadOnlyLibraries
}

func (m *MediaContainer) GetStreamingBrainABRVersion() *float64 {
	if m == nil {
		return nil
	}
	return m.StreamingBrainABRVersion
}

func (m *MediaContainer) GetStreamingBrainVersion() *float64 {
	if m == nil {
		return nil
	}
	return m.StreamingBrainVersion
}

func (m *MediaContainer) GetSync() *bool {
	if m == nil {
		return nil
	}
	return m.Sync
}

func (m *MediaContainer) GetTranscoderActiveVideoSessions() *float64 {
	if m == nil {
		return nil
	}
	return m.TranscoderActiveVideoSessions
}

func (m *MediaContainer) GetTranscoderAudio() *bool {
	if m == nil {
		return nil
	}
	return m.TranscoderAudio
}

func (m *MediaContainer) GetTranscoderLyrics() *bool {
	if m == nil {
		return nil
	}
	return m.TranscoderLyrics
}

func (m *MediaContainer) GetTranscoderPhoto() *bool {
	if m == nil {
		return nil
	}
	return m.TranscoderPhoto
}

func (m *MediaContainer) GetTranscoderSubtitles() *bool {
	if m == nil {
		return nil
	}
	return m.TranscoderSubtitles
}

func (m *MediaContainer) GetTranscoderVideo() *bool {
	if m == nil {
		return nil
	}
	return m.TranscoderVideo
}

func (m *MediaContainer) GetTranscoderVideoBitrates() *string {
	if m == nil {
		return nil
	}
	return m.TranscoderVideoBitrates
}

func (m *MediaContainer) GetTranscoderVideoQualities() *string {
	if m == nil {
		return nil
	}
	return m.TranscoderVideoQualities
}

func (m *MediaContainer) GetTranscoderVideoResolutions() *string {
	if m == nil {
		return nil
	}
	return m.TranscoderVideoResolutions
}

func (m *MediaContainer) GetUpdatedAt() *float64 {
	if m == nil {
		return nil
	}
	return m.UpdatedAt
}

func (m *MediaContainer) GetUpdater() *bool {
	if m == nil {
		return nil
	}
	return m.Updater
}

func (m *MediaContainer) GetVersion() *string {
	if m == nil {
		return nil
	}
	return m.Version
}

func (m *MediaContainer) GetVoiceSearch() *bool {
	if m == nil {
		return nil
	}
	return m.VoiceSearch
}

func (m *MediaContainer) GetDirectory() []Directory {
	if m == nil {
		return nil
	}
	return m.Directory
}

// GetServerCapabilitiesResponseBody - The Server Capabilities
type GetServerCapabilitiesResponseBody struct {
	MediaContainer *MediaContainer `json:"MediaContainer,omitempty"`
}

func (g *GetServerCapabilitiesResponseBody) GetMediaContainer() *MediaContainer {
	if g == nil {
		return nil
	}
	return g.MediaContainer
}

type GetServerCapabilitiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The Server Capabilities
	Object *GetServerCapabilitiesResponseBody
}

func (g *GetServerCapabilitiesResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetServerCapabilitiesResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetServerCapabilitiesResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetServerCapabilitiesResponse) GetObject() *GetServerCapabilitiesResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
