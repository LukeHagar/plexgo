// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/LukeHagar/plexgo/internal/utils"
	"net/http"
)

type PerformVoiceSearchRequest struct {
	// The query term
	Query string `queryParam:"style=form,explode=true,name=query"`
	// This gives context to the search, and can result in re-ordering of search result hubs
	SectionID *float64 `queryParam:"style=form,explode=true,name=sectionId"`
	// The number of items to return per hub
	Limit *float64 `default:"3" queryParam:"style=form,explode=true,name=limit"`
}

func (p PerformVoiceSearchRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PerformVoiceSearchRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"query"}); err != nil {
		return err
	}
	return nil
}

func (p *PerformVoiceSearchRequest) GetQuery() string {
	if p == nil {
		return ""
	}
	return p.Query
}

func (p *PerformVoiceSearchRequest) GetSectionID() *float64 {
	if p == nil {
		return nil
	}
	return p.SectionID
}

func (p *PerformVoiceSearchRequest) GetLimit() *float64 {
	if p == nil {
		return nil
	}
	return p.Limit
}

type PerformVoiceSearchResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (p *PerformVoiceSearchResponse) GetContentType() string {
	if p == nil {
		return ""
	}
	return p.ContentType
}

func (p *PerformVoiceSearchResponse) GetStatusCode() int {
	if p == nil {
		return 0
	}
	return p.StatusCode
}

func (p *PerformVoiceSearchResponse) GetRawResponse() *http.Response {
	if p == nil {
		return nil
	}
	return p.RawResponse
}
