// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type HistoryAllGetResponses200Metadata struct {
	// The account id of this playback
	AccountID *int64 `json:"accountID,omitempty"`
	// The device id which played the item
	DeviceID *int64 `json:"deviceID,omitempty"`
	// The key for this individual history item
	HistoryKey *string `json:"historyKey,omitempty"`
	// The metadata key for the item played
	Key *string `json:"key,omitempty"`
	// The library section id containing the item played
	LibrarySectionID *string `json:"librarySectionID,omitempty"`
	// The originally available at of the item played
	OriginallyAvailableAt *string `json:"originallyAvailableAt,omitempty"`
	// The rating key for the item played
	RatingKey *string `json:"ratingKey,omitempty"`
	// The thumb of the item played
	Thumb *string `json:"thumb,omitempty"`
	// The title of the item played
	Title *string `json:"title,omitempty"`
	// The metadata type of the item played
	Type *string `json:"type,omitempty"`
	// The time when the item was played
	ViewedAt *int64 `json:"viewedAt,omitempty"`
}

func (h *HistoryAllGetResponses200Metadata) GetAccountID() *int64 {
	if h == nil {
		return nil
	}
	return h.AccountID
}

func (h *HistoryAllGetResponses200Metadata) GetDeviceID() *int64 {
	if h == nil {
		return nil
	}
	return h.DeviceID
}

func (h *HistoryAllGetResponses200Metadata) GetHistoryKey() *string {
	if h == nil {
		return nil
	}
	return h.HistoryKey
}

func (h *HistoryAllGetResponses200Metadata) GetKey() *string {
	if h == nil {
		return nil
	}
	return h.Key
}

func (h *HistoryAllGetResponses200Metadata) GetLibrarySectionID() *string {
	if h == nil {
		return nil
	}
	return h.LibrarySectionID
}

func (h *HistoryAllGetResponses200Metadata) GetOriginallyAvailableAt() *string {
	if h == nil {
		return nil
	}
	return h.OriginallyAvailableAt
}

func (h *HistoryAllGetResponses200Metadata) GetRatingKey() *string {
	if h == nil {
		return nil
	}
	return h.RatingKey
}

func (h *HistoryAllGetResponses200Metadata) GetThumb() *string {
	if h == nil {
		return nil
	}
	return h.Thumb
}

func (h *HistoryAllGetResponses200Metadata) GetTitle() *string {
	if h == nil {
		return nil
	}
	return h.Title
}

func (h *HistoryAllGetResponses200Metadata) GetType() *string {
	if h == nil {
		return nil
	}
	return h.Type
}

func (h *HistoryAllGetResponses200Metadata) GetViewedAt() *int64 {
	if h == nil {
		return nil
	}
	return h.ViewedAt
}

// HistoryAllGetResponses200MediaContainer - `MediaContainer` is the root element of most Plex API responses. It serves as a generic container for various types of content (Metadata, Hubs, Directories, etc.) and includes pagination information (offset, size, totalSize) when applicable.
// Common attributes: - identifier: Unique identifier for this container - size: Number of items in this response page - totalSize: Total number of items available (for pagination) - offset: Starting index of this page (for pagination)
// The container often "hoists" common attributes from its children. For example, if all tracks in a container share the same album title, the `parentTitle` attribute may appear on the MediaContainer rather than being repeated on each track.
type HistoryAllGetResponses200MediaContainer struct {
	Identifier *string `json:"identifier,omitempty"`
	// The offset of where this container page starts among the total objects available. Also provided in the `X-Plex-Container-Start` header.
	//
	Offset *int64 `json:"offset,omitempty"`
	Size   *int64 `json:"size,omitempty"`
	// The total size of objects available. Also provided in the `X-Plex-Container-Total-Size` header.
	//
	TotalSize *int64                              `json:"totalSize,omitempty"`
	Metadata  []HistoryAllGetResponses200Metadata `json:"Metadata,omitempty"`
}

func (h *HistoryAllGetResponses200MediaContainer) GetIdentifier() *string {
	if h == nil {
		return nil
	}
	return h.Identifier
}

func (h *HistoryAllGetResponses200MediaContainer) GetOffset() *int64 {
	if h == nil {
		return nil
	}
	return h.Offset
}

func (h *HistoryAllGetResponses200MediaContainer) GetSize() *int64 {
	if h == nil {
		return nil
	}
	return h.Size
}

func (h *HistoryAllGetResponses200MediaContainer) GetTotalSize() *int64 {
	if h == nil {
		return nil
	}
	return h.TotalSize
}

func (h *HistoryAllGetResponses200MediaContainer) GetMetadata() []HistoryAllGetResponses200Metadata {
	if h == nil {
		return nil
	}
	return h.Metadata
}

// HistoryAllGetResponses200 - OK
type HistoryAllGetResponses200 struct {
	MediaContainer *HistoryAllGetResponses200MediaContainer `json:"MediaContainer,omitempty"`
}

func (h *HistoryAllGetResponses200) GetMediaContainer() *HistoryAllGetResponses200MediaContainer {
	if h == nil {
		return nil
	}
	return h.MediaContainer
}
