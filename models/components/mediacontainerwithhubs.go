// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// MediaContainerWithHubsMediaContainer - `MediaContainer` is the root element of most Plex API responses. It serves as a generic container for various types of content (Metadata, Hubs, Directories, etc.) and includes pagination information (offset, size, totalSize) when applicable.
// Common attributes: - identifier: Unique identifier for this container - size: Number of items in this response page - totalSize: Total number of items available (for pagination) - offset: Starting index of this page (for pagination)
// The container often "hoists" common attributes from its children. For example, if all tracks in a container share the same album title, the `parentTitle` attribute may appear on the MediaContainer rather than being repeated on each track.
type MediaContainerWithHubsMediaContainer struct {
	Identifier *string `json:"identifier,omitempty"`
	// The offset of where this container page starts among the total objects available. Also provided in the `X-Plex-Container-Start` header.
	//
	Offset *int64 `json:"offset,omitempty"`
	Size   *int64 `json:"size,omitempty"`
	// The total size of objects available. Also provided in the `X-Plex-Container-Total-Size` header.
	//
	TotalSize *int64 `json:"totalSize,omitempty"`
	Hub       []Hub  `json:"Hub,omitempty"`
}

func (m *MediaContainerWithHubsMediaContainer) GetIdentifier() *string {
	if m == nil {
		return nil
	}
	return m.Identifier
}

func (m *MediaContainerWithHubsMediaContainer) GetOffset() *int64 {
	if m == nil {
		return nil
	}
	return m.Offset
}

func (m *MediaContainerWithHubsMediaContainer) GetSize() *int64 {
	if m == nil {
		return nil
	}
	return m.Size
}

func (m *MediaContainerWithHubsMediaContainer) GetTotalSize() *int64 {
	if m == nil {
		return nil
	}
	return m.TotalSize
}

func (m *MediaContainerWithHubsMediaContainer) GetHub() []Hub {
	if m == nil {
		return nil
	}
	return m.Hub
}

// MediaContainerWithHubs - OK
type MediaContainerWithHubs struct {
	MediaContainer *MediaContainerWithHubsMediaContainer `json:"MediaContainer,omitempty"`
}

func (m *MediaContainerWithHubs) GetMediaContainer() *MediaContainerWithHubsMediaContainer {
	if m == nil {
		return nil
	}
	return m.MediaContainer
}
