// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type StopAllTasksButlerErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (s *StopAllTasksButlerErrors) GetCode() *int {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *StopAllTasksButlerErrors) GetMessage() *string {
	if s == nil {
		return nil
	}
	return s.Message
}

func (s *StopAllTasksButlerErrors) GetStatus() *int {
	if s == nil {
		return nil
	}
	return s.Status
}

// StopAllTasksUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type StopAllTasksUnauthorized struct {
	Errors []StopAllTasksButlerErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &StopAllTasksUnauthorized{}

func (e *StopAllTasksUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type StopAllTasksErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (s *StopAllTasksErrors) GetCode() *int {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *StopAllTasksErrors) GetMessage() *string {
	if s == nil {
		return nil
	}
	return s.Message
}

func (s *StopAllTasksErrors) GetStatus() *int {
	if s == nil {
		return nil
	}
	return s.Status
}

// StopAllTasksBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type StopAllTasksBadRequest struct {
	Errors []StopAllTasksErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &StopAllTasksBadRequest{}

func (e *StopAllTasksBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
