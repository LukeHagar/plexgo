// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type UpdatePlaylistPlaylistsErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (u *UpdatePlaylistPlaylistsErrors) GetCode() *int {
	if u == nil {
		return nil
	}
	return u.Code
}

func (u *UpdatePlaylistPlaylistsErrors) GetMessage() *string {
	if u == nil {
		return nil
	}
	return u.Message
}

func (u *UpdatePlaylistPlaylistsErrors) GetStatus() *int {
	if u == nil {
		return nil
	}
	return u.Status
}

// UpdatePlaylistUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type UpdatePlaylistUnauthorized struct {
	Errors []UpdatePlaylistPlaylistsErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &UpdatePlaylistUnauthorized{}

func (e *UpdatePlaylistUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type UpdatePlaylistErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (u *UpdatePlaylistErrors) GetCode() *int {
	if u == nil {
		return nil
	}
	return u.Code
}

func (u *UpdatePlaylistErrors) GetMessage() *string {
	if u == nil {
		return nil
	}
	return u.Message
}

func (u *UpdatePlaylistErrors) GetStatus() *int {
	if u == nil {
		return nil
	}
	return u.Status
}

// UpdatePlaylistBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type UpdatePlaylistBadRequest struct {
	Errors []UpdatePlaylistErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &UpdatePlaylistBadRequest{}

func (e *UpdatePlaylistBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
