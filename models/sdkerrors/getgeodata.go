// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type GetGeoDataPlexErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (g *GetGeoDataPlexErrors) GetCode() *int {
	if g == nil {
		return nil
	}
	return g.Code
}

func (g *GetGeoDataPlexErrors) GetMessage() *string {
	if g == nil {
		return nil
	}
	return g.Message
}

func (g *GetGeoDataPlexErrors) GetStatus() *int {
	if g == nil {
		return nil
	}
	return g.Status
}

// GetGeoDataUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type GetGeoDataUnauthorized struct {
	Errors []GetGeoDataPlexErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &GetGeoDataUnauthorized{}

func (e *GetGeoDataUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type GetGeoDataErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (g *GetGeoDataErrors) GetCode() *int {
	if g == nil {
		return nil
	}
	return g.Code
}

func (g *GetGeoDataErrors) GetMessage() *string {
	if g == nil {
		return nil
	}
	return g.Message
}

func (g *GetGeoDataErrors) GetStatus() *int {
	if g == nil {
		return nil
	}
	return g.Status
}

// GetGeoDataBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type GetGeoDataBadRequest struct {
	Errors []GetGeoDataErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &GetGeoDataBadRequest{}

func (e *GetGeoDataBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
