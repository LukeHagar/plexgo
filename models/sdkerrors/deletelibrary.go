// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type DeleteLibraryLibraryErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (d *DeleteLibraryLibraryErrors) GetCode() *int {
	if d == nil {
		return nil
	}
	return d.Code
}

func (d *DeleteLibraryLibraryErrors) GetMessage() *string {
	if d == nil {
		return nil
	}
	return d.Message
}

func (d *DeleteLibraryLibraryErrors) GetStatus() *int {
	if d == nil {
		return nil
	}
	return d.Status
}

// DeleteLibraryUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type DeleteLibraryUnauthorized struct {
	Errors []DeleteLibraryLibraryErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &DeleteLibraryUnauthorized{}

func (e *DeleteLibraryUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DeleteLibraryErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (d *DeleteLibraryErrors) GetCode() *int {
	if d == nil {
		return nil
	}
	return d.Code
}

func (d *DeleteLibraryErrors) GetMessage() *string {
	if d == nil {
		return nil
	}
	return d.Message
}

func (d *DeleteLibraryErrors) GetStatus() *int {
	if d == nil {
		return nil
	}
	return d.Status
}

// DeleteLibraryBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type DeleteLibraryBadRequest struct {
	Errors []DeleteLibraryErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &DeleteLibraryBadRequest{}

func (e *DeleteLibraryBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
