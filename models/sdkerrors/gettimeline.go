// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type GetTimelineVideoErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (g *GetTimelineVideoErrors) GetCode() *int {
	if g == nil {
		return nil
	}
	return g.Code
}

func (g *GetTimelineVideoErrors) GetMessage() *string {
	if g == nil {
		return nil
	}
	return g.Message
}

func (g *GetTimelineVideoErrors) GetStatus() *int {
	if g == nil {
		return nil
	}
	return g.Status
}

// GetTimelineUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type GetTimelineUnauthorized struct {
	Errors []GetTimelineVideoErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &GetTimelineUnauthorized{}

func (e *GetTimelineUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type GetTimelineErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (g *GetTimelineErrors) GetCode() *int {
	if g == nil {
		return nil
	}
	return g.Code
}

func (g *GetTimelineErrors) GetMessage() *string {
	if g == nil {
		return nil
	}
	return g.Message
}

func (g *GetTimelineErrors) GetStatus() *int {
	if g == nil {
		return nil
	}
	return g.Status
}

// GetTimelineBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type GetTimelineBadRequest struct {
	Errors []GetTimelineErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &GetTimelineBadRequest{}

func (e *GetTimelineBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
