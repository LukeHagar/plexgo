// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type StartTaskButlerErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (s *StartTaskButlerErrors) GetCode() *int {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *StartTaskButlerErrors) GetMessage() *string {
	if s == nil {
		return nil
	}
	return s.Message
}

func (s *StartTaskButlerErrors) GetStatus() *int {
	if s == nil {
		return nil
	}
	return s.Status
}

// StartTaskUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type StartTaskUnauthorized struct {
	Errors []StartTaskButlerErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &StartTaskUnauthorized{}

func (e *StartTaskUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type StartTaskErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (s *StartTaskErrors) GetCode() *int {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *StartTaskErrors) GetMessage() *string {
	if s == nil {
		return nil
	}
	return s.Message
}

func (s *StartTaskErrors) GetStatus() *int {
	if s == nil {
		return nil
	}
	return s.Status
}

// StartTaskBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type StartTaskBadRequest struct {
	Errors []StartTaskErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &StartTaskBadRequest{}

func (e *StartTaskBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
