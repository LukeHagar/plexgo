// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type StartUniversalTranscodeVideoErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (s *StartUniversalTranscodeVideoErrors) GetCode() *int {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *StartUniversalTranscodeVideoErrors) GetMessage() *string {
	if s == nil {
		return nil
	}
	return s.Message
}

func (s *StartUniversalTranscodeVideoErrors) GetStatus() *int {
	if s == nil {
		return nil
	}
	return s.Status
}

// StartUniversalTranscodeUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type StartUniversalTranscodeUnauthorized struct {
	Errors []StartUniversalTranscodeVideoErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &StartUniversalTranscodeUnauthorized{}

func (e *StartUniversalTranscodeUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type StartUniversalTranscodeErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (s *StartUniversalTranscodeErrors) GetCode() *int {
	if s == nil {
		return nil
	}
	return s.Code
}

func (s *StartUniversalTranscodeErrors) GetMessage() *string {
	if s == nil {
		return nil
	}
	return s.Message
}

func (s *StartUniversalTranscodeErrors) GetStatus() *int {
	if s == nil {
		return nil
	}
	return s.Status
}

// StartUniversalTranscodeBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type StartUniversalTranscodeBadRequest struct {
	Errors []StartUniversalTranscodeErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &StartUniversalTranscodeBadRequest{}

func (e *StartUniversalTranscodeBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
