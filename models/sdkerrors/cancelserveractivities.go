// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type CancelServerActivitiesActivitiesErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (c *CancelServerActivitiesActivitiesErrors) GetCode() *int {
	if c == nil {
		return nil
	}
	return c.Code
}

func (c *CancelServerActivitiesActivitiesErrors) GetMessage() *string {
	if c == nil {
		return nil
	}
	return c.Message
}

func (c *CancelServerActivitiesActivitiesErrors) GetStatus() *int {
	if c == nil {
		return nil
	}
	return c.Status
}

// CancelServerActivitiesUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type CancelServerActivitiesUnauthorized struct {
	Errors []CancelServerActivitiesActivitiesErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &CancelServerActivitiesUnauthorized{}

func (e *CancelServerActivitiesUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type CancelServerActivitiesErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (c *CancelServerActivitiesErrors) GetCode() *int {
	if c == nil {
		return nil
	}
	return c.Code
}

func (c *CancelServerActivitiesErrors) GetMessage() *string {
	if c == nil {
		return nil
	}
	return c.Message
}

func (c *CancelServerActivitiesErrors) GetStatus() *int {
	if c == nil {
		return nil
	}
	return c.Status
}

// CancelServerActivitiesBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type CancelServerActivitiesBadRequest struct {
	Errors []CancelServerActivitiesErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &CancelServerActivitiesBadRequest{}

func (e *CancelServerActivitiesBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
