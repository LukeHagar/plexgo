// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type GetUsersUsersErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (g *GetUsersUsersErrors) GetCode() *int {
	if g == nil {
		return nil
	}
	return g.Code
}

func (g *GetUsersUsersErrors) GetMessage() *string {
	if g == nil {
		return nil
	}
	return g.Message
}

func (g *GetUsersUsersErrors) GetStatus() *int {
	if g == nil {
		return nil
	}
	return g.Status
}

// GetUsersUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type GetUsersUnauthorized struct {
	Errors []GetUsersUsersErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &GetUsersUnauthorized{}

func (e *GetUsersUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type GetUsersErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (g *GetUsersErrors) GetCode() *int {
	if g == nil {
		return nil
	}
	return g.Code
}

func (g *GetUsersErrors) GetMessage() *string {
	if g == nil {
		return nil
	}
	return g.Message
}

func (g *GetUsersErrors) GetStatus() *int {
	if g == nil {
		return nil
	}
	return g.Status
}

// GetUsersBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type GetUsersBadRequest struct {
	Errors []GetUsersErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &GetUsersBadRequest{}

func (e *GetUsersBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
