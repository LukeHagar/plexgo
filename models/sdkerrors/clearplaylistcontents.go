// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type ClearPlaylistContentsPlaylistsErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (c *ClearPlaylistContentsPlaylistsErrors) GetCode() *int {
	if c == nil {
		return nil
	}
	return c.Code
}

func (c *ClearPlaylistContentsPlaylistsErrors) GetMessage() *string {
	if c == nil {
		return nil
	}
	return c.Message
}

func (c *ClearPlaylistContentsPlaylistsErrors) GetStatus() *int {
	if c == nil {
		return nil
	}
	return c.Status
}

// ClearPlaylistContentsUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type ClearPlaylistContentsUnauthorized struct {
	Errors []ClearPlaylistContentsPlaylistsErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &ClearPlaylistContentsUnauthorized{}

func (e *ClearPlaylistContentsUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type ClearPlaylistContentsErrors struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int    `json:"status,omitempty"`
}

func (c *ClearPlaylistContentsErrors) GetCode() *int {
	if c == nil {
		return nil
	}
	return c.Code
}

func (c *ClearPlaylistContentsErrors) GetMessage() *string {
	if c == nil {
		return nil
	}
	return c.Message
}

func (c *ClearPlaylistContentsErrors) GetStatus() *int {
	if c == nil {
		return nil
	}
	return c.Status
}

// ClearPlaylistContentsBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type ClearPlaylistContentsBadRequest struct {
	Errors []ClearPlaylistContentsErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &ClearPlaylistContentsBadRequest{}

func (e *ClearPlaylistContentsBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
